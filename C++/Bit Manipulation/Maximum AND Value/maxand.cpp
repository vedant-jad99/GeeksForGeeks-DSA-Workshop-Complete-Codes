/*
Given an array arr[] of N positive elements. The task is to find the Maximum AND Value generated by any pair(arri, arrj) from the array such that i != j.
Note: AND is bitwise '&' operator.
Example:
        Input - N = 4, arr[] = {4, 8, 12, 16}
        Ouptut - 8
        Explanation - Pair (8,12) has the Maximum AND Value 8.
        
        Input - N = 4, arr[] = {2, 8, 16, 4}
        Output - 0
        
Constraints:
        Time complexity - O(N*log(M)), M = maximum elements
        Space complexity - O(1)
        1 <= N <= 10^5
        1 <= arr[i] <= 10^5
*/

#include <iostream>
#include <cmath>

using namespace std;

int maxAND (int a[], int N)
{
    // Your code here
    int maximum = a[0], mask = 0, ans = 0, count, and_val;
    for(int i = 1; i < N; i++)
        maximum = max(a[i], maximum);
        
    int digits = floor(log2(maximum));
    for(int i = digits; i >= 0; i--) {
        mask = ans | 1<<i; 
        count = 0;
        for(int j = 0; j < N; j++) {
            and_val = mask & a[j];
            if(and_val == mask)
                count++;
        }
        if(count > 1)
            ans = ans | 1 <<i ;
    }
    return ans;
}

int main()
{
  int N;
  cin>>N;
  
  int A[N];
  for(int i = 0; i < N; i++)
    cin>>A[i];
    
  cout<<maxAND(A, N);
  return 0;
}
